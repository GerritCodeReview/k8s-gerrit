{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c8655ed1_9d59e472",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-18T03:10:46Z",
      "side": 1,
      "message": "Remaining TODO: write tests",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f75840d9_04f51701",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-18T03:11:51Z",
      "side": 1,
      "message": "TODO: write tests",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be045aef_67836d02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "Are you also planning to add a `Host` resource? As far as I understood the Ambassador architecture (by just quickly skimming through it), this would basically be the equivalent of the the istio gateway or the host-part of the Kubernetes Ingress and since we provide it for the other options, it would be nice to have it for Ambassador as well.\nI assume that this might be unwanted in situations where the same `Host` is used for multiple applications in the same cluster, but then it would still be nice to have the option to create a `Host`.",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f14a64f7_7c03c0eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:48:33Z",
      "side": 1,
      "message": "Could you also add this new option for an ingre",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86b52970_30c52aa8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:59:32Z",
      "side": 1,
      "message": "hmm. Often, clusters will set up a wildcard host so each time a mapping is created, an associated host resource doesn\u0027t have to be created. But to maintain symmetry with the other options, and to facilitate generic-ambassador usage, I can add option for creating a Host. Okay to do it as a separate change?",
      "parentUuid": "be045aef_67836d02",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fa3aac1_99074f2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-20T07:24:20Z",
      "side": 1,
      "message": "Sure, doing that in a separate change is fine.\nCould you elaborate on what you mean with `wildcard host`, just for my understanding? Is it also a `Host` resource that uses a wildcard for subdomains and is used by multiple applications?",
      "parentUuid": "86b52970_30c52aa8",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39c61b1b_70096317",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T17:57:38Z",
      "side": 1,
      "message": "\u003e Is it also a Host resource that uses a wildcard for subdomains and is used by multiple applications\n\nyes\n\n\n\u003e Remember than Emissary-ingress does not make sure that a wildcard Host exists! If the wildcard behavior is needed, a Host with a hostname of \"*\"must be defined by the user.\n\nhttps://www.getambassador.io/docs/emissary/latest/topics/running/host-crd\n\nWill create a new commit with an ambassador option:\n\n```\ningress:\n  enabled: true\n  tls:\n    enabled: true\n    secret: my-secret\n  host: my-host-name.com\n  ambassador:\n    id: []\n    createHost: true | false\n```\n\n, where setting `createHost\u003dtrue` will result in an accompanying Host being created:\n\n```\napiVersion: getambassador.io/v2\nkind: Host\nmetadata:\n  name: gerrit-ambassador-host\nspec:\n  hostname: my-host-name.com\n  tlsSecret:\n    name: my-secret\n```",
      "parentUuid": "6fa3aac1_99074f2a",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "812b3b86_4682ce09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-21T23:44:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f75840d9_04f51701",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08178641_d1dac922",
        "filename": "operator/pom.xml",
        "patchSetId": 14
      },
      "lineNbr": 20,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "Why not 1.18.28?",
      "range": {
        "startLine": 20,
        "startChar": 18,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc230b07_8505b523",
        "filename": "operator/pom.xml",
        "patchSetId": 14
      },
      "lineNbr": 20,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08178641_d1dac922",
      "range": {
        "startLine": 20,
        "startChar": 18,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a452193b_951ffd2e",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/GerritOperator.java",
        "patchSetId": 14
      },
      "lineNbr": 110,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "nit: Unrelated change",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b27c172_652fbf18",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/GerritOperator.java",
        "patchSetId": 14
      },
      "lineNbr": 110,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a452193b_951ffd2e",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "929702b2_8c5230e2",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/IngressType.java",
        "patchSetId": 14
      },
      "lineNbr": 21,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:48:33Z",
      "side": 1,
      "message": "Please also document this in `Documentation/operator.md`.",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 12
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdcc9225_b3770eaf",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/IngressType.java",
        "patchSetId": 14
      },
      "lineNbr": 21,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "929702b2_8c5230e2",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 12
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71bc136e_73b69abc",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/GerritAmbassadorReconciler.java",
        "patchSetId": 14
      },
      "lineNbr": 116,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "It might be more convenient to use the BulkDependentResource interface [1-2] to create all the mappings. Then you would only have a single dependent resource here, but could create all mappings. I think that would not match the intended use case completely, since BulkDependentResources are more intended to be factories and not builders, but it would remove quite a bit of code duplication.\n\nI am leaving that up to your preference.\n\n[1] https://javaoperatorsdk.io/docs/dependent-resources#bulk-dependent-resources\n[2] https://gerrit.googlesource.com/k8s-gerrit/+/096ad435477647f78e6d60fca965f50f5a21f21c/operator/src/main/java/com/google/gerrit/k8s/operator/cluster/dependent/ClusterManagedGerrit.java",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 116,
        "endChar": 6
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f35c5992_db9765c6",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/GerritAmbassadorReconciler.java",
        "patchSetId": 14
      },
      "lineNbr": 116,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:59:32Z",
      "side": 1,
      "message": "Investigating this approach and deciding. Thanks for bringing it up. There is definitely a lot of duplicated code.",
      "parentUuid": "71bc136e_73b69abc",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 116,
        "endChar": 6
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4c5524b_6465e022",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/GerritAmbassadorReconciler.java",
        "patchSetId": 14
      },
      "lineNbr": 125,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "Wouldn\u0027t those constants better belong to the respective dependent resource classes?",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 125,
        "endChar": 81
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df2f5ecd_a3709f07",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/GerritAmbassadorReconciler.java",
        "patchSetId": 14
      },
      "lineNbr": 125,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4c5524b_6465e022",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 125,
        "endChar": 81
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91479407_0867da38",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/GerritClusterMappingGETReplica.java",
        "patchSetId": 14
      },
      "lineNbr": 60,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "Could you also specify the request path in addition?",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22d6d9f4_86a971c2",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/GerritClusterMappingGETReplica.java",
        "patchSetId": 14
      },
      "lineNbr": 60,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-20T07:21:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91479407_0867da38",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10769130_8441ee57",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/GerritClusterMappingReceiver.java",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "I am not familiar with Ambassador, but don\u0027t we need something like `/.*` at the end to capture the full path as in [1]?\n\n[1] https://www.getambassador.io/docs/edge-stack/latest/topics/using/prefix-regex",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "840655e9_44140733",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/GerritClusterMappingReceiver.java",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "good catch",
      "parentUuid": "10769130_8441ee57",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80f9eb50_6646f0cc",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/LoadBalanceCondition.java",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "This would mean that these resources would be reconciled, even if the ingress was disabled in the GerritCluster CR.",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3050dacf_5e2450ca",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/LoadBalanceCondition.java",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "good eye",
      "parentUuid": "80f9eb50_6646f0cc",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18350275_bd63b4ef",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/ReceiverMappingCondition.java",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "nit: unnecessary braces",
      "range": {
        "startLine": 31,
        "startChar": 63,
        "endLine": 31,
        "endChar": 64
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34a4bd96_b989fc14",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/ReceiverMappingCondition.java",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18350275_bd63b4ef",
      "range": {
        "startLine": 31,
        "startChar": 63,
        "endLine": 31,
        "endChar": 64
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39bb138c_cabbcd5b",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/SingleMappingCondition.java",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "The logger is not being used and should be removed.",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91e7f963_1fe17402",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/SingleMappingCondition.java",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39bb138c_cabbcd5b",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d0d04a8_44f96a76",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/Utils.java",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "Missing license header",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b74184f9_a27edc47",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/Utils.java",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d0d04a8_44f96a76",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e16b0f6_1b683b09",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/Utils.java",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:45:49Z",
      "side": 1,
      "message": "Instead of using a Utils-class you could create an abstract class being used by all dependent resources managed by the GerritAmbassadorReconciler.",
      "range": {
        "startLine": 11,
        "startChar": 13,
        "endLine": 11,
        "endChar": 19
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44c7b453_78dc7041",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/Utils.java",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "good idea, will do",
      "parentUuid": "9e16b0f6_1b683b09",
      "range": {
        "startLine": 11,
        "startChar": 13,
        "endLine": 11,
        "endChar": 19
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b036d86_45138532",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/Utils.java",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-21T14:23:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44c7b453_78dc7041",
      "range": {
        "startLine": 11,
        "startChar": 13,
        "endLine": 11,
        "endChar": 19
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06c6c0b0_5974bc18",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/Utils.java",
        "patchSetId": 14
      },
      "lineNbr": 13,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "If not already available, should we put that in the `com.google.gerrit.k8s.operator.network` package and reference it from all implementations?",
      "range": {
        "startLine": 13,
        "startChar": 16,
        "endLine": 13,
        "endChar": 39
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "feeb7264_90c10e66",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/ambassador/dependent/Utils.java",
        "patchSetId": 14
      },
      "lineNbr": 13,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-20T07:21:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06c6c0b0_5974bc18",
      "range": {
        "startLine": 13,
        "startChar": 16,
        "endLine": 13,
        "endChar": 39
      },
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54501ad5_c925773d",
        "filename": "operator/src/main/resources/crd/emissary-crds.yaml",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "What license is ambassador using? Do we have to add some license header or reference?",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "222cc620_b836cc87",
        "filename": "operator/src/main/resources/crd/emissary-crds.yaml",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-25T19:30:48Z",
      "side": 1,
      "message": "Ambassador team suggests adding a top-of-the-file comment with a pointer to the GitHub source for the CRDs:\n\n```\n\nMusab Shakeel\n  5 days ago\nI am using the emissary crds file [1] in an open-source k8s operator project [2] to generate a Java client for Emissary-Ingress Custom Resources. The oss project is licensed under Apache License, Version 2.0 (the \"License\"). I see that emissry-ingress also is licensed under this same license (among others).\nShould I add an Apache license header to my version of the emissary-crds.yaml file in [2]?\n[1] https://github.com/emissary-ingress/emissary/blob/master/manifests/emissary/emissary-crds.yaml.in\n[2] https://gerrit-review.googlesource.com/c/k8s-gerrit/+/386014/14/operator/src/main/resources/crd/emissary-crds.yaml\n\n\nCindy Mullins\n  3 minutes ago\nHi \n@Musab Shakeel\n, thanks for asking! I’ve checked internally and we’ve not seen a license applied to a CRD.  Our suggestion would be to link your copied CRD to the original source hosted on our website - is that doable? (edited) \n\n\nMusab Shakeel\n  \u003c 1 minute ago\nyes, makes sense. I\u0027ll add a top-of-the-file comment with a pointer to the GitHub source for the CRDs.\n\n```",
      "parentUuid": "54501ad5_c925773d",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db82feed_96e77f16",
        "filename": "operator/src/main/resources/crd/emissary-crds.yaml",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T07:41:20Z",
      "side": 1,
      "message": "How is this generated?\nI guess, this was just copied from the ambassador project ,right?\nInstead of checking in the yaml file, could we just download it as part of the build, e.g. using the maven-download-plugin [1]?\n\n[1] https://github.com/maven-download-plugin/maven-download-plugin",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a14e4fd_c9789a24",
        "filename": "operator/src/main/resources/crd/emissary-crds.yaml",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T02:50:31Z",
      "side": 1,
      "message": "\u003e copy/pasted\n\nYes\n\n\u003e download it as part of build\n\nEmissary CRDs versions are not self-contained. v2 Mapping does not have a `ambassador_id` field defined, but it is possible for clients to create Mappings using `getambassador.io/v2` apiVersion. This is because the Emissary service, deployed as part of the Emissary deployment setup, does some webhook magic where when it sees someone deploying a `getambassador.io/v2` Mapping with `ambassador_id`, it adds it on-the-fly. I think they did this to maintain backwards compatibility with v1 or something (where ambassador_id was a String, not List\u003cString\u003e).\n\nTo be able to generate Mappings that contain `ambassador_id` via the operator I need a Mapping POJO that contain `ambassador_id` field. To do this, I need to manually copy `ambassador_id` field from v3alpha1 Mapping (defined in same file) to v2 Mapping.\n\nDownloading file as part of build would not be feasible for this reason (unless we also added this manual addition step of ambassador_id field to v2 via a script run by the build).\n\nAdditionally, the CRD yaml contains a bunch of other CRD definitions that are not relevant to the operator. Auto-generating their POJOs would unnecessarily increase the build artifact/image size. I guess we could also remove these via a script run as part of the build process.\n\nAt the moment, the options are to either check in this slightly edited CRD file, or to add an additional build step that runs a \"process-crd\" script, in addition to \"download-crd\" build step. \n\nWhat do you think?\n\nThe ambassador_id problem goes away if we just use v3alpha1 API to create the mapping but does it make sense to use an alpha version?",
      "parentUuid": "db82feed_96e77f16",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e3e8538_e0500bd8",
        "filename": "operator/src/main/resources/crd/emissary-crds.yaml",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-20T07:21:07Z",
      "side": 1,
      "message": "Ok. I guess the copy/paste method is fine for now. It can still be changed, if the old version becomes obsolete. However, please add a static link to the original file (e.g. in github) and list modifications that you did.",
      "parentUuid": "1a14e4fd_c9789a24",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d95d8cd1_12d81988",
        "filename": "operator/src/main/resources/crd/emissary-crds.yaml",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 1162586
      },
      "writtenOn": "2023-09-20T17:57:38Z",
      "side": 1,
      "message": "I previously included the GH link + modifications in the commit message. Would you like me to include them as a comment in the yaml as well?",
      "parentUuid": "7e3e8538_e0500bd8",
      "revId": "096ad435477647f78e6d60fca965f50f5a21f21c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}