{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec73ee39_330b3f3c",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 65,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2024-05-17T15:27:16Z",
      "side": 1,
      "message": "This is now inconsistent. We have in principal 3 cluster modes:\n\n- Single primary\n- HIGH_AVAILABILITY\n- MULITSITE\n\nThe Single Primary mode is implicit and installed when a single replica is configured. In that case, the high-availability plugin was not installed and some configuration omitted, since it didn\u0027t make sense.\nWith multisite you do it differently and install everything even, if there is only a single replica pod. This causes weird edge cases everywhere, e.g. how to deal with pull-replication in that case.\nWe should either handle it the same as in high-availability, i.e. as long as only a single primary is configured, all multi-primary stuff is omitted.\nAlternatively, we could make it a dedicated cluster mode, but since it is an operator level option, I think that would just make it unnecessarily complicated, since it would require to reconfigure the operator, when scaling up from 1 to 2+ primary pods.",
      "range": {
        "startLine": 65,
        "startChar": 9,
        "endLine": 65,
        "endChar": 92
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95701e12_8bff6662",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 65,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-21T16:41:17Z",
      "side": 1,
      "message": "\u003e With multisite you do it differently and install everything even, if there is only a single replica pod. \n\nTo simplify the design, for the moment we have decided to change the contract when the cluster mode is `MULTISITE`. The new contract enforce the cluster to have the following requirements:\n\n- Single Primary Gerrit\n- More than 1 Replicas\n\n```\n(gerrits.size() \u003d\u003d 1\n        \u0026\u0026 gerrits.get(0).getSpec().getMode() \u003d\u003d GerritMode.PRIMARY\n        \u0026\u0026 gerrits.get(0).getSpec().getReplicas() \u003e 1);\n```\n\nThe validation would fail in case that this contract is not satisfied.\n\n\u003e This causes weird edge cases everywhere, e.g. how to deal with pull-replication in that case.\nWe should either handle it the same as in high-availability, i.e. as long as only a single primary is configured, all multi-primary stuff is omitted.\n\nThis edge case would no apply with the new contract.\n\n\u003e Alternatively, we could make it a dedicated cluster mode, but since it is an operator level option, I think that would just make it unnecessarily complicated, since it would require to reconfigure the operator, when scaling up from 1 to 2+ primary pods.\n\nI agree with that.\n\nI think in future iterations we will address the fact of starting from a MULTISITE cluster with 1 replica and scaling up to 2+. But we want to be pragmatic and start with a simple approach.",
      "parentUuid": "ec73ee39_330b3f3c",
      "range": {
        "startLine": 65,
        "startChar": 9,
        "endLine": 65,
        "endChar": 92
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16c54a2f_6cad2b34",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 65,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2024-05-24T12:40:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "95701e12_8bff6662",
      "range": {
        "startLine": 65,
        "startChar": 9,
        "endLine": 65,
        "endChar": 92
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdbe35f7_de046260",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 66,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2024-05-17T15:27:16Z",
      "side": 1,
      "message": "This breaks the style that is in general used here. The whole condition should be handled in a method that is descriptive for what it checks. I.e. you should keep the method name as before or maybe adapt it to `noRefDbConfiguredForMultiPrimary` and just extend it.",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 66,
        "endChar": 37
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b138dbf7_7464a96e",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 66,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-21T15:22:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdbe35f7_de046260",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 66,
        "endChar": 37
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "336b72d7_5bee0d6c",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritClusterAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2024-05-17T15:27:16Z",
      "side": 1,
      "message": "Put this condition in a method with a descriptive method to match the style used in other places here.",
      "range": {
        "startLine": 57,
        "startChar": 8,
        "endLine": 57,
        "endChar": 85
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac53ec3a_6213d3d5",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritClusterAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-20T09:57:58Z",
      "side": 1,
      "message": "The check should be:\nIf `cluster mode is MULTISITE` and `Not (there are more than one replica and the mode is PRIMARY)`:\nthen BAD_REQUEST",
      "parentUuid": "336b72d7_5bee0d6c",
      "range": {
        "startLine": 57,
        "startChar": 8,
        "endLine": 57,
        "endChar": 85
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43c8f8d0_7f7401eb",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritClusterAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-20T10:31:53Z",
      "side": 1,
      "message": "-1 to my previous comment. I will rephrase it:\n\nThe contract for MULTISITE should be:\n```\n- Cluster mode MULTISITE:\n- Gerrits with size 1\n- K8s replicas \u003e 1\n- Mode PRIMARY\n```",
      "parentUuid": "ac53ec3a_6213d3d5",
      "range": {
        "startLine": 57,
        "startChar": 8,
        "endLine": 57,
        "endChar": 85
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe11098d_fb51fa59",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritClusterAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-21T16:41:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43c8f8d0_7f7401eb",
      "range": {
        "startLine": 57,
        "startChar": 8,
        "endLine": 57,
        "endChar": 85
      },
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7121682_dbdc7067",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritClusterAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 137,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-20T09:52:06Z",
      "side": 1,
      "message": "This method should check that there are more than 1 replica and PRIMARY",
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a8678e2_0f8e5513",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritClusterAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 137,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-20T10:31:53Z",
      "side": 1,
      "message": "-1 to my previous comment. I will rephrase it.\n\nThe contract for MULTISITE:\n\n- rename the method to be accurate\n\n- gerrits.size() \u003d\u003d 1\n\n- gerrits.get(0).getSpec().getMode() \u003d\u003d GerritMode.PRIMARY;\n\n- gerrits.get(0).getSpec().getGerrits().get(0).getSpec().getReplicas() \u003e 1",
      "parentUuid": "a7121682_dbdc7067",
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3578593_eedb86de",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/admission/servlet/GerritClusterAdmissionWebhook.java",
        "patchSetId": 15
      },
      "lineNbr": 137,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-21T16:41:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a8678e2_0f8e5513",
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "012b0820_0eb95fbb",
        "filename": "operator/src/test/java/com/google/gerrit/k8s/operator/server/GerritClusterAdmissionWebhookTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2024-05-17T15:27:16Z",
      "side": 1,
      "message": "Could you add tests for multisite as well or parameterize the existing tests?",
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "496686e0_0d7af6a5",
        "filename": "operator/src/test/java/com/google/gerrit/k8s/operator/server/GerritClusterAdmissionWebhookTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-05-21T16:41:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "012b0820_0eb95fbb",
      "revId": "3fa82a0e462add317f4df5b22674cb0b9ee6ca1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}