{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "940c423f_c4430e78",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/Constants.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-11-24T15:13:19Z",
      "side": 1,
      "message": "actually a more neutral name which is also compatible with the other constant names preceding this one would be `HA_PLUGIN_URL_PATTERN`\n\nThe fact that this will be forbidden has nothing to do with the constant name",
      "revId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77b19572_7d43e0f2",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/network/Constants.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-11-27T08:46:36Z",
      "side": 1,
      "message": "Yes, currently it is only the ha-plugin, but the way it is used, it would allow other paths as well. Thus, this pattern is not limited to the ha-plugin but could be used for other paths as well, without changing the code that uses this constant. To reflect it, I chose the name as it is.",
      "parentUuid": "940c423f_c4430e78",
      "revId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15fe7cda_a4292004",
        "filename": "operator/src/test/resources/com/google/gerrit/k8s/operator/network/ingress/dependent/ingress_primary.yaml",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-11-24T15:13:19Z",
      "side": 1,
      "message": "unfortunately, this is a repetition of the same pattern: means double maintenance",
      "revId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87ec3e4e_69ffa8c5",
        "filename": "operator/src/test/resources/com/google/gerrit/k8s/operator/network/ingress/dependent/ingress_primary.yaml",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-11-27T08:46:36Z",
      "side": 1,
      "message": "This is test code in yaml. First of all, I can\u0027t use Java constants here, second I don\u0027t want to, since this is supposed to give the expected result. If the location pattern changes, this test should fail if not adapted.",
      "parentUuid": "15fe7cda_a4292004",
      "revId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc6a9d2e_251c12fa",
        "filename": "operator/src/test/resources/com/google/gerrit/k8s/operator/network/ingress/dependent/ingress_primary_replica.yaml",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-11-24T15:13:19Z",
      "side": 1,
      "message": "one more repetition",
      "revId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb91c435_9ae82ca5",
        "filename": "operator/src/test/resources/com/google/gerrit/k8s/operator/network/ingress/dependent/ingress_primary_replica_tls.yaml",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-11-24T15:13:19Z",
      "side": 1,
      "message": "stop commenting here :-)",
      "revId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a6a6ff4_1e15dc78",
        "filename": "operator/src/test/resources/com/google/gerrit/k8s/operator/network/ingress/dependent/ingress_primary_replica_tls.yaml",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-11-27T08:46:36Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "cb91c435_9ae82ca5",
      "revId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ee9e5e5b9808c8371dc4a7bda8088730fe67c33d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}