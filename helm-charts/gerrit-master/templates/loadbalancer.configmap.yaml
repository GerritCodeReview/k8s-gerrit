{{- $root := . -}}

{{ if .Values.gerritMaster.scaling.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-gerrit-master-loadbalancer-configmap
  labels:
    app: gerrit-master-loadbalancer
    chart: {{ template "gerrit-master.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  haproxy.cfg: |-
    global
      log stdout local0

    frontend http
      log global
      option httplog
      option dontlognull
      bind *:80
      mode http
      default_backend gerrit

      http-request set-header X-Project Project\ %[path]

      # Extract project name from git requests
      acl is_git_req hdr(user-agent) -m beg git
      http-request replace-header X-Project ^Project\ (?:/a)?(?:/p)?/(.*)/(?:info/refs|git-upload-pack|git-receive-pack)$ \1 if is_git_req

      # Extract project name from /c/*-route
      http-request replace-header X-Project ^Project\ /c/(.+)/\\+/\d+(?:/?\d+(?:\\.\\.\d+)?(?:/.+)?)?/?$ \1

      # Extract project name from /changes/*-route
      http-request replace-header X-Project ^Project\ (?:/a)?/changes/(.+)~\d+/?.*$ \1

      # Extract project name from /projects/*-route
      http-request replace-header X-Project ^Project\ (?:/a)?/projects/([^/]+)/?.*$ \1

      # Extract project name from query string, only if a query URL-parameter
      # exists and the project name was not part of the path
      acl project_queried urlp(q) -m reg project%3A
      http-request replace-header X-Project ^Project\ .*$ Project\ %[urlp(q),regsub(%20,;,g)] if project_queried
      http-request replace-header X-Project ^Project\ .*project%3A([^;]+).*$ \1 if project_queried

      # Encode slashes, which are not allowed in headers
      http-request set-header X-Project %[req.hdr(X-Project),regsub(/,%2F,g)]

      # Remove optional `.git`-suffix
      http-request replace-header X-Project ^(.*)\\.git$ \1

      # Check whether project name was present in the URL by checking the `Project`
      # prefix and deleting the header
      acl contains-no-project hdr(X-Project) -m beg Project
      http-request del-header X-Project if contains-no-project

      http-request capture req.hdr(X-Project) len 50

    backend gerrit
      mode http
      balance hdr(X-Project)
      option forwardfor
      hash-type consistent djb2
      {{ range $k, $v := int .Values.gerritMaster.scaling.replicas | until }}
      server gerrit-pod-{{$v}} {{ $root.Release.Name }}-gerrit-master-stateful-set-{{$v}}.{{ $root.Release.Name }}-gerrit-master-service:8080 check
      {{- end }}
{{- end }}
