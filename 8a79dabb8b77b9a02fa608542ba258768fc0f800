{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ad76ad66_2a57bb71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-15T14:11:16Z",
      "side": 1,
      "message": "The spanner-refdb plugin should also be automatically installed on startup, if it has been configured.",
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14703c2d_7db684cd",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/config/SpannerRefDbConfigBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-15T14:11:16Z",
      "side": 1,
      "message": "Should we support the emulator in a Kubernetes cluster? Would that even work?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 32,
        "endChar": 72
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59bdab26_a5231099",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/config/SpannerRefDbConfigBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1144862
      },
      "writtenOn": "2023-09-19T08:04:09Z",
      "side": 1,
      "message": "Set to false",
      "parentUuid": "14703c2d_7db684cd",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 32,
        "endChar": 72
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d3336d_36f9a643",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/config/SpannerRefDbConfigBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-15T14:11:16Z",
      "side": 1,
      "message": "This would be given by the operator, since the secret would be mounted to a fixed path. Thus, this shouldn\u0027t be configurable.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 46,
        "endChar": 76
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5793d21c_b28d337f",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/config/SpannerRefDbConfigBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1144862
      },
      "writtenOn": "2023-09-19T08:04:09Z",
      "side": 1,
      "message": "I\u0027ve set it to /var/gerrit/etc/sap-gcp-gerrit-dev-credentials.json but I\u0027m not sure what to do on the other end (how do we mount that secret to said fixed path)",
      "parentUuid": "93d3336d_36f9a643",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 46,
        "endChar": 76
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd47f94f_7b817388",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/config/SpannerRefDbConfigBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-19T13:35:56Z",
      "side": 1,
      "message": "Secrets have to be manually created by the user. The reason for that is, that otherwise secrets would be exposed via the uploaded CR, which isn\u0027t protected by the same safeguards as Secrets.\nThus, the Gerrit CR provides the `secretRef` option [1] to provide a name of an existing secret. Whatever files are provided in there will be mounted to the `etc`-directory of the Gerrit site. E.g. if you provide a `secure.config` in that secret, it will end up under `/var/gerrit/etc/secure.config` and can be used by Gerrit. I would suggest to expect the same for the GCP credentials file, i.e. it should be provided by the referenced secret and thus end up under `/var/gerrit/etc`. Since we have to use a fixed filename, we should jus thardcode one and expect it to be used, e.g. `gcp-credentials.json`.\n\nTo make this more obvious to users, I would suggest the following additional things:\n- Document that we expect the credentials file in the secret and under the correct name.\n- Provide an example Secret\n- Add a validation webhook, which checks for the file in the referenced secret, if spanner is being used.\n\n[1] https://gerrit.googlesource.com/k8s-gerrit/+/refs/changes/76/386576/1/operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/model/GerritTemplateSpec.java#52",
      "parentUuid": "5793d21c_b28d337f",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 46,
        "endChar": 76
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b5bf875_091a7f6a",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/dependent/GerritConfigMap.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-15T14:11:16Z",
      "side": 1,
      "message": "We could use a switch statement here now.",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe50129b_9aac50c2",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/dependent/GerritConfigMap.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1144862
      },
      "writtenOn": "2023-09-19T08:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b5bf875_091a7f6a",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8212f0d_2120ecac",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/dependent/GerritInitConfigMap.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-15T14:11:16Z",
      "side": 1,
      "message": "We could use a switch statement here now.",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 75,
        "endChar": 5
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1ac8cdb_be2adf61",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/gerrit/dependent/GerritInitConfigMap.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1144862
      },
      "writtenOn": "2023-09-19T08:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8212f0d_2120ecac",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 75,
        "endChar": 5
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "943c29de_97c75dec",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/server/GerritAdmissionWebhook.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-15T14:11:16Z",
      "side": 1,
      "message": "unrelated change",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 52
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e00dbcb0_1d7c7bd8",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/server/GerritAdmissionWebhook.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1144862
      },
      "writtenOn": "2023-09-19T08:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "943c29de_97c75dec",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 52
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d62f5be8_afc70867",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/server/GerritAdmissionWebhook.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-15T14:11:16Z",
      "side": 1,
      "message": "This might be merged into a single method using a switch statement.",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 94,
        "endChar": 3
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31922d74_146331d9",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/server/GerritAdmissionWebhook.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1144862
      },
      "writtenOn": "2023-09-19T08:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d62f5be8_afc70867",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 94,
        "endChar": 3
      },
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc30cb91_e5523199",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/shared/model/GlobalRefDbConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-15T14:11:16Z",
      "side": 1,
      "message": "This updates the GerritCluster and Gerrit CustomResources. Please don\u0027t forget to update the API reference and version of the CRs",
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "044733dd_5d411a8d",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/shared/model/GlobalRefDbConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1144862
      },
      "writtenOn": "2023-09-19T08:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc30cb91_e5523199",
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f82f6648_2e7eb06e",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/shared/model/SpannerRefDbConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-09-18T09:15:32Z",
      "side": 1,
      "message": "Is construction via no-arg Constructor and setters imposed by the Java operator framework ?\nOtherwise I would prefer to mark fields final and provide an appropriate constructor initialising the fields.",
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef326be3_968d5b4c",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/shared/model/SpannerRefDbConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-09-18T09:38:22Z",
      "side": 1,
      "message": "I believe so. The fabric8 kubernetes client uses json (de-)serialization to convert yaml to POJOs and the other way around. It can\u0027t use constructors to do so, but requires getters and setters.",
      "parentUuid": "f82f6648_2e7eb06e",
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61bbceb6_dbd7da65",
        "filename": "operator/src/main/java/com/google/gerrit/k8s/operator/shared/model/SpannerRefDbConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-09-18T10:00:10Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ef326be3_968d5b4c",
      "revId": "8a79dabb8b77b9a02fa608542ba258768fc0f800",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}